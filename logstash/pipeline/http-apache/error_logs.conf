input {
  http {
    id => "error-http-apache-input"
    port => 1702

    codec => multiline {
      pattern => "^(\s+|\t)|(Caused by:)"
      what => "previous"
      auto_flush_interval => 5
    }
  }
}

filter {
  if [url][path] =~ "error" {
    mutate {
      replace => {
        "type" => "error"
      }
    }
  }
  else if "multiline" in [tags] {
    mutate {
      replace => {
        "type" => "error"
      }
    }

    prune {
      whitelist_names => ["^type$", "^message$", "@version", "@timestamp"]
    }

    grok {
      match => {
        # Match the components of the first line in the error log message (so we ignore the stacktrace).
        "message" => "%{CATALINA_DATESTAMP:[@metadata][timestamp]} %{LOGLEVEL:level} %{JAVACLASS:class}: (?<msg>.+?(?=(\n|\r|\r\n)))"
      }
    }

    # Check if grok pattern matching failed earlier...
    if "_grokparsefailure" in [tags] {
      # Silently drop the current event...
      drop {
      }
    }

    mutate {
      remove_field => ["message"]
    }

    # Set the timestamp of the Logstash event based on the timestamp from the received log line (Tomcat's log format).
    date {
      match => ["[@metadata][timestamp]", "MMM dd, yyyy KK:mm:ss aa"]
    }
  }
}

output {
  elasticsearch {
    id => "error-http-apache-elastic-output"
    hosts => ["https://elastic-01", "https://elastic-02", "https://elastic-03"]
    ssl_certificate_authorities => ["/usr/share/logstash/config/certs/ca/ca.crt"]
    compression_level => 4      # values range from 0 (off) to 9 (best compression results and lowest network bandwidth, but CPU usage increases).
    user => "logstash_internal" # user account created by "init_logstash_creds.sh" script.
    password => "lopass"        # user account created by "init_logstash_creds.sh" script.
    index => "mylogs-%{type}-%{+YYYY.MM.dd}"  # index pattern privileges for current user set by "init_logstash_creds.sh" script.
  }

  stdout {
    id => "error-http-apache-std-output"
    codec => rubydebug {
      metadata => true  # Display metadata fields too.
    }
  }
}
