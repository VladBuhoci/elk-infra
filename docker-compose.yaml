services:
  elastic-01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    ports:
      - ${ELASTIC_PORT_01}:9200
    environment:
#     - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - node.name=elastic-01
      - cluster.name=${CLUSTER_NAME}
      - cluster.initial_master_nodes=elastic-01,elastic-02
      - discovery.seed_hosts=elastic-02
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
#     - xpack.security.enabled=true
#     - xpack.security.http.ssl.enabled=true
#     - xpack.security.http.ssl.key=certs/elastic-01/elastic-01.key
#     - xpack.security.http.ssl.certificate=certs/elastic-01/elastic-01.crt
#     - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
#     - xpack.security.transport.ssl.enabled=true
#     - xpack.security.transport.ssl.key=certs/elastic-01/elastic-01.key
#     - xpack.security.transport.ssl.certificate=certs/elastic-01/elastic-01.crt
#     - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
#     - xpack.security.transport.ssl.verification_mode=certificate
#     - xpack.license.self_generated.type=${LICENSE}
    volumes:
      - elastic-data-01:/usr/share/elasticsearch/data
#     - elastic-certs-01:/usr/share/elasticsearch/config/certs
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://localhost:9200",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1

  elastic-02:
    depends_on:
      - elastic-01
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    ports:
      - ${ELASTIC_PORT_02}:9200
    environment:
#     - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - node.name=elastic-02
      - cluster.name=${CLUSTER_NAME}
      - cluster.initial_master_nodes=elastic-01,elastic-02
      - discovery.seed_hosts=elastic-01
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
#     - xpack.security.enabled=true
#     - xpack.security.http.ssl.enabled=true
#     - xpack.security.http.ssl.key=certs/elastic-02/elastic-02.key
#     - xpack.security.http.ssl.certificate=certs/elastic-02/elastic-02.crt
#     - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
#     - xpack.security.transport.ssl.enabled=true
#     - xpack.security.transport.ssl.key=certs/elastic-02/elastic-02.key
#     - xpack.security.transport.ssl.certificate=certs/elastic-02/elastic-02.crt
#     - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
#     - xpack.security.transport.ssl.verification_mode=certificate
#     - xpack.license.self_generated.type=${LICENSE}
    volumes:
      - elastic-data-02:/usr/share/elasticsearch/data
#     - elastic-certs-02:/usr/share/elasticsearch/config/certs
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://localhost:9200",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    depends_on:
      elastic-01:
       condition: service_healthy
      elastic-02:
       condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=["http://elastic-01:${ELASTIC_PORT_01}","http://elastic-02:${ELASTIC_PORT_02}"]
    volumes:
      - kibana-data:/usr/share/kibana/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

volumes:
  elastic-data-01:
    driver: local
# elastic-certs-01:
#   driver: local
  elastic-data-02:
    driver: local
# elastic-certs-02:
#   driver: local
  kibana-data:
    driver: local

